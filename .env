MYSQL_ROOT_PASSWORD=Admin1234
MYSQL_DATABASE=gestionproject

# Variables d'environnement pour l'application Spring Boot
SPRING_APPLICATION_NAME=GestionStockProjectF
SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/gestionproject?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true # Utilise le nom du service mysql-db défini dans docker-compose
SPRING_DATASOURCE_USERNAME=root
SPRING_DATASOURCE_PASSWORD=${MYSQL_ROOT_PASSWORD} # Réutilise le mot de passe root de MySQL
SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.MySQL8Dialect
SPRING_JPA_HIBERNATE_DDL_AUTO=update # 'update' est généralement plus sûr que 'create-drop' pour un environnement de dev/prod. 'create-drop' a été conservé de votre application.properties, mais considérez 'update' ou 'validate'.

# Variables d'environnement pour JWT (tirées de votre application.properties)
JWT_SECRET=votreCleSecreteTresTresLongueEtComplexePourLaSecurite # Assurez-vous de changer cela pour une vraie clé secrète en production
JWT_EXPIRATION=86400000

# Port de l'application Spring Boot (interne au conteneur, doit correspondre à EXPOSE dans Dockerfile et au port interne dans docker-compose)
# Le port externe sera défini dans docker-compose.yml
SPRING_BOOT_APP_PORT=8080

